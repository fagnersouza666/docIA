@echo off
REM Script para verificar e configurar pr√©-requisitos do Kubernetes

echo =========================================
echo     DocIA - Setup Kubernetes
echo =========================================
echo.

REM Verificar se Docker est√° rodando
echo [1/5] Verificando Docker...
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker n√£o est√° instalado ou n√£o est√° rodando
    echo    Instale o Docker Desktop: https://docs.docker.com/desktop/install/windows-install/
    pause
    exit /b 1
)

docker info >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker Desktop n√£o est√° rodando
    echo    Inicie o Docker Desktop e tente novamente
    pause
    exit /b 1
)
echo ‚úÖ Docker est√° funcionando

REM Verificar se kubectl est√° instalado
echo [2/5] Verificando kubectl...
kubectl version --client >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå kubectl n√£o est√° instalado
    echo    Instale via: winget install -e --id Kubernetes.kubectl
    pause
    exit /b 1
)
echo ‚úÖ kubectl est√° instalado

REM Verificar se h√° cluster dispon√≠vel
echo [3/5] Verificando cluster Kubernetes...
kubectl cluster-info >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è  Nenhum cluster Kubernetes detectado
    echo.
    echo    OP√á√ïES PARA CONFIGURAR KUBERNETES:
    echo.
    echo    üìã OP√á√ÉO 1: Docker Desktop (Recomendado)
    echo       1. Abra o Docker Desktop
    echo       2. V√° em Settings / Settings
    echo       3. Clique em "Kubernetes" no menu lateral
    echo       4. Marque "Enable Kubernetes"
    echo       5. Clique "Apply & Restart"
    echo       6. Aguarde alguns minutos para inicializar
    echo.
    echo    üìã OP√á√ÉO 2: minikube
    echo       1. Instale: winget install minikube
    echo       2. Execute: minikube start
    echo.
    echo    üìã OP√á√ÉO 3: kind
    echo       1. Instale: winget install Kubernetes.kind
    echo       2. Execute: kind create cluster
    echo.
    echo    Ap√≥s configurar, execute novamente este script
    pause
    exit /b 1
)
echo ‚úÖ Cluster Kubernetes detectado

REM Verificar contexto atual
echo [4/5] Verificando contexto...
kubectl config current-context >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Nenhum contexto ativo
    echo    Configure um contexto v√°lido
    pause
    exit /b 1
)

set CURRENT_CONTEXT=
for /f "delims=" %%i in ('kubectl config current-context') do set CURRENT_CONTEXT=%%i
echo ‚úÖ Contexto ativo: %CURRENT_CONTEXT%

REM Verificar se pode criar recursos
echo [5/5] Testando permiss√µes...
kubectl auth can-i create namespaces >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Sem permiss√µes para criar recursos
    echo    Verifique as permiss√µes do cluster
    pause
    exit /b 1
)
echo ‚úÖ Permiss√µes OK

echo.
echo =========================================
echo ‚úÖ Tudo pronto para o deploy!
echo =========================================
echo.
echo Cluster: %CURRENT_CONTEXT%
echo.
echo Pr√≥ximos passos:
echo 1. Execute: deploy-k8s.bat
echo 2. Ou execute comandos individuais:
echo    kubectl apply -f k8s-namespace.yaml
echo    kubectl apply -f k8s-configmap.yaml
echo    kubectl apply -f k8s-pvc.yaml
echo    kubectl apply -f k8s-deployment.yaml
echo    kubectl apply -f k8s-service.yaml
echo.
pause 