apiVersion: apps/v1
kind: Deployment
metadata:
  name: doc-ia-deployment
  namespace: doc-ia
  labels:
    app.kubernetes.io/name: doc-ia
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: doc-ia-system
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/version: "2.3.0"
  annotations:
    description: "DocIA - Intelligent Document Search System"
    deployment.kubernetes.io/revision: "1"
    app.kubernetes.io/documentation: "https://github.com/your-org/doc-ia"
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: doc-ia
      app.kubernetes.io/component: application
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: doc-ia
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: doc-ia-system
        app.kubernetes.io/version: "2.3.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
        config.alpha.kubernetes.io/dependency: "doc-ia-config,doc-ia-secrets"
    spec:
      serviceAccountName: doc-ia-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: doc-ia
          image: doc-ia:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false # Ollama needs write access
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: doc-ia-config
            - secretRef:
                name: doc-ia-secrets
          volumeMounts:
            - name: documents-storage
              mountPath: /app/documents
              subPath: documents
            - name: cache-storage
              mountPath: /app/.cache
              subPath: cache
            - name: logs-storage
              mountPath: /app/logs
              subPath: logs
            - name: tmp-storage
              mountPath: /tmp
          resources:
            requests:
              memory: "2Gi"
              cpu: "1000m"
              ephemeral-storage: "2Gi"
            limits:
              memory: "4Gi"
              cpu: "2000m"
              ephemeral-storage: "5Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /startup
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - "sleep 15"
      volumes:
        - name: documents-storage
          persistentVolumeClaim:
            claimName: doc-ia-documents-pvc
        - name: cache-storage
          persistentVolumeClaim:
            claimName: doc-ia-cache-pvc
        - name: logs-storage
          persistentVolumeClaim:
            claimName: doc-ia-logs-pvc
        - name: tmp-storage
          emptyDir:
            sizeLimit: 1Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - doc-ia
                topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: doc-ia
      nodeSelector:
        kubernetes.io/os: linux
