apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: doc-ia-ingress
  namespace: doc-ia
  labels:
    app.kubernetes.io/name: doc-ia
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: doc-ia-system
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/version: "2.3.0"
  annotations:
    description: "Ingress for DocIA application"
    # Nginx Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/client-body-timeout: "60"
    nginx.ingress.kubernetes.io/client-header-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"

    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-rps: "20"
    nginx.ingress.kubernetes.io/limit-whitelist: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self';" always;

    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"

    # Load balancer annotations (cloud-specific)
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"

    # Monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/path: "/metrics"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - doc-ia.local
        - doc-ia.example.com
      secretName: doc-ia-tls-secret
  rules:
    - host: doc-ia.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: doc-ia-service
                port:
                  name: http
    - host: doc-ia.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: doc-ia-service
                port:
                  name: http
---
apiVersion: v1
kind: Secret
metadata:
  name: doc-ia-tls-secret
  namespace: doc-ia
  labels:
    app.kubernetes.io/name: doc-ia
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: doc-ia-system
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/version: "2.3.0"
  annotations:
    description: "TLS certificate for DocIA ingress"
    cert-manager.io/issuer: "letsencrypt-prod"
type: kubernetes.io/tls
data:
  # These will be populated by cert-manager
  tls.crt: ""
  tls.key: ""
